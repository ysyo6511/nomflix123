{"version":3,"sources":["asset/noPosterSmall.jpeg","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyled.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","prototype","PropTypes","number","isRequired","string","bool","HomePresenter","nowPlaying","upComing","popular","error","loading","Helmet","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaa73f9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.bf8c73d2.jpeg\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nconst Header = styled.header`\n    color:white;\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:50px;\n    display:flex;\n    align-items: center;\n    padding: 0px 10px;\n    background-color:rgba(20,20,20,0.7);\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\n`;\n\nconst List = styled.ul`\n    display:flex;\n   \n`;\n\nconst Item = styled.li`\n  \n    width: 80px;\n    height:50px;\n    text-align:center;\n    border-bottom:3px solid ${props => (props.current ? \"#3498db\" : \"transparent\")};\n    transition:border-bottom 0.4s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height:50px;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n\n`;\n\nexport default withRouter(({location:{pathname}}) => (\n    <Header>\n        \n        <List>\n            <Item current={pathname === \"/\"}><SLink to=\"/\">Movies</SLink></Item>\n            <Item current={pathname === \"/tv\"}><SLink to=\"/tv\">TV</SLink></Item>\n            <Item current={pathname === \"/search\"}><SLink to=\"/search\">Search</SLink></Item>\n        </List>\n    </Header>\n    ));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nconst Container = styled.div`\n    :not(:last-child){\n        margin-bottom:50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size:14px;\n    font-weight:600;\n    \n`;\n\nconst Grid = styled.div`\n    margin-top:25px;\n    display:grid;\n    grid-template-columns : repeat(auto-fill, 125px);\n    grid-gap:25px;\n`;\n\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height:100vh;\n    width:100vw;\n    display:flex;\n    justify-content:center;\n    font-size:28px;\n    margin-top:20px;\n`;\n\nexport default () => <Container><span role=\"img\" aria-label=\"Loading\">⏰</span></Container>\n\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width:100vw;\n    display:flex;\n    justify-content:center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n    \n`;\n\nconst Message = ({ text,color }) => (\n<Container>\n<Text color={color}>{text}</Text>\n</Container>\n)\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color:PropTypes.string.isRequired\n}\n\nexport default Message;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    font-size:12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl} );\n    height:180px;\n    background-size:cover;\n    border-radius:4px;\n    background-position:center center;\n    transition:opacity .1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom: 5px;\n    right: 5px;\n\n    position:absolute;\n    opacity:0;\n\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom:5px;\n    position:relative;\n    &:hover{\n        ${Image}{\n            opacity:0.3;\n        }\n        ${Rating}{\n            opacity:0.3;\n        }\n    }\n    \n`;\n\n\n\nconst Title = styled.span`\n    display:block;\n    margin-bottom:3px;\n`;\n\nconst Year = styled.span`\n    font-size:10px;\n    color:rgba(255,255,255,0.5);\n`;\n\n\n\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => \n\n<Link to={isMovie? `/movie/${id}` : `/show/${id}`}>\n<Container>\n    <ImageContainer>\n    <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../asset/noPosterSmall.jpeg\")} />\n    <Rating>\n        <span role=\"img\" aria-label=\"rating\">\n        ⭐️\n        </span>{\"  \"}\n        {rating}/10\n        </Rating>\n    </ImageContainer>\n    <Title>{title.length > 18 ? `${title.substring(0,18)}...`:title}</Title>\n    <Year>{year}</Year>\n    </Container>\n</Link>\n\nPoster.prototype = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool,\n\n}\n\nexport default Poster;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from 'react-helmet';\nimport Section from '../../Components/Section';\nimport Loader from \"../../Components/Loader\";\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\n\n\nconst Container = styled.div`\npadding: 20px;\n\n`;\n\n\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading }) =>\n    <>\n        <Helmet>\n            <title>\n                Movies | Nomfilx\n                </title>\n        </Helmet>\n        {\n            loading ? <Loader /> : (\n\n                <Container>\n                    <Helmet>\n                        <title>\n                            Movies | Nomfilx\n                </title>\n                    </Helmet>\n                    {nowPlaying && nowPlaying.length > 0 && (\n                        <Section title=\"Now Playing\">{nowPlaying.map(movie => <Poster key={movie.id} id={movie.id} title={movie.original_title} imageUrl={movie.poster_path} rating={movie.vote_average} isMovie={true} year={movie.release_date.substring(0, 4)} />)}</Section >\n                    )}\n                    {upComing && upComing.length > 0 && (\n                        <Section title=\"Upcoming Movies\">{upComing.map(movie => <Poster key={movie.id} id={movie.id} title={movie.original_title} imageUrl={movie.poster_path} rating={movie.vote_average} isMovie={true} year={movie.release_date.substring(0, 4)} />)}</Section >\n                    )}\n                    {popular && popular.length > 0 && (\n                        <Section title=\"Popular Movies\">{popular.map(movie => <Poster key={movie.id} id={movie.id} title={movie.original_title} imageUrl={movie.poster_path} rating={movie.vote_average} isMovie={true} year={movie.release_date.substring(0, 4)} />)}</Section >\n                    )}\n                    {error && <Message color=\"#e74c3c\" text={error} />}\n                </Container>\n\n            )\n        }\n    </>\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    upComing: PropTypes.array,\n    popular: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default HomePresenter;\n\n\n\n","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL:\"https://api.themoviedb.org/3/\",\n    params:{\n        api_key : \"7e4990cdf8af74142af4a31b87557b49\",\n        language: \"en-US\"\n    }\n})\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upComing: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id => api.get(`movie/${id}`,{\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: term => api.get(\"search/movie\",{\n        params:{\n            query: encodeURIComponent(term)\n        }\n    }\n    )\n}\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id => api.get(`tv/${id}`,{\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: term => api.get(\"search/tv\",{\n        params:{\n            query: encodeURIComponent(term) \n        }\n    }\n    )\n\n}","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;","import React from 'react';\nimport HomePresenter from \"./HomePresenter\"\nimport { moviesApi } from '../../api';\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying : null,\n        upComing : null,\n        popular : null,\n        error:null,\n        loading:true\n    };\n\n    async componentDidMount(){\n        try{\n            const {data : {results: nowPlaying}} =  await moviesApi.nowPlaying();\n            const {data : {results: upComing}} = await moviesApi.upComing();\n            const {data : {results : popular}} = await moviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upComing,\n                popular\n            });\n\n        } catch{\n            this.setState({\n                error : \"Can't find movies information\"\n            });\n        }finally{\n            this.setState({\n                loading:false\n            });\n            \n        }\n        \n    }\n\n\n\n    render(){\n        const {nowPlaying, upComing,popular,error, loading} = this.state;\n        console.log(loading)\n        return (\n        <HomePresenter \n        nowPlaying={nowPlaying}\n        upComing = {upComing}\n        popular={popular}\n        error={error}\n        loading={loading}\n        />\n        );\n    }\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from 'react-helmet';\nimport Section from \"../../Components/Section\"\nimport Loader from \"../../Components/Loader\"\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\nconst Container = styled.div`\npadding: 20px;\n`;\n\nconst TVPresenter = ({topRated,popular,airingToday,error,loading}) => \n\n<>\n        <Helmet>\n            <title>\n                TV Shows | Nomfilx\n                </title>\n        </Helmet>\n        {\n            loading ? <Loader /> : (\n\n                <Container>\n                    <Helmet>\n                        <title>\n                            TV Shows | Nomfilx\n                </title>\n                    </Helmet>\n        {topRated && topRated.length > 0 && \n        <Section title=\"Top Rated Shows\">{topRated.map(show =><Poster key={show.id} id={show.id} title={show.original_name} imageUrl={show.poster_path} rating={show.vote_average} isMovie={true} year={show.first_air_date.substring(0,4)}/>)} </Section>\n        \n        }\n        {popular && popular.length > 0 && \n        <Section title=\"Popular Shows\">{popular.map(show =><Poster key={show.id} id={show.id} title={show.original_name} imageUrl={show.poster_path} rating={show.vote_average} isMovie={true} year={show.first_air_date.substring(0,4)}/>)} </Section>\n        }\n        {airingToday && airingToday.length > 0 && \n        <Section title=\"Airing Today\">{airingToday.map(show =><Poster key={show.id} id={show.id} title={show.original_name} imageUrl={show.poster_path} rating={show.vote_average} isMovie={true} year={show.first_air_date.substring(0,4)}/>)} </Section>\n        }\n        {error && <Message color =\"#e74c3c\" text={error} />}\n    </Container>\n    )};\n    </>\n\nTVPresenter.propTypes = {\n    topRated:PropTypes.array,\n    popular:PropTypes.array,\n    airingToday:PropTypes.array,\n    loading:PropTypes.bool.isRequired,\n    error:PropTypes.string\n}\n\nexport default TVPresenter;","import TVContainer from './TVContainer';\n\nexport default TVContainer;","import React from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from '../../api';\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true\n    }\n\n    async componentDidMount() {\n        try {\n            const { data: { results: topRated } } = await tvApi.topRated();\n            const { data: { results: popular } } = await tvApi.popular();\n            const { data: { results: airingToday } } = await tvApi.airingToday();\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            });\n        } catch{\n            this.setState({\n                error: \"Can't find TV information.\"\n            })\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    render() {\n        const { topRated, popular, airingToday,error, loading } = this.state;\n        // console.log(loading)\n        return (\n            <TVPresenter\n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from 'react-helmet';\nimport Loader from '../../Components/Loader';\nimport Section from '../../Components/Section';\nimport Message from '../../Components/Message'\nimport Poster from '../../Components/Poster'\nconst Container = styled.div`\npadding: 20px;\n`;\n\nconst Form = styled.form`\nmargin-bottom: 50px;\n`;\n\nconst Input = styled.input`\nall: unset;\nfont-size:28px;\nwidth:100%;\n`;\n\nconst SearchPresenter = (\n    { movieResults,\n        tvResults,\n        searchTerm,\n        error,\n        loading,\n        handleSubmit,\n        updateTerm\n    }\n) =>\n\n    <Container>\n        <Helmet>\n            <title>\n                Search | Nomfilx\n            </title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\n        </Form>\n        {loading ? <Loader /> :\n            <>\n                {movieResults && movieResults.length > 0 && \n                <Section title=\"Movie Result\">{movieResults.map(movie => <Poster key={movie.id} id={movie.id} title={movie.original_title} imageUrl={movie.poster_path} rating={movie.vote_average} isMovie={true} year={movie.release_date.substring(0, 4)} />)}</Section >\n            }\n                {tvResults && tvResults.length > 0 && \n                <Section title=\"TV Show Result\">{tvResults.map(show =><Poster key={show.id} id={show.id} title={show.original_name} imageUrl={show.poster_path} rating={show.vote_average} isMovie={true} year={show.first_air_date.substring(0,4)}/>)} </Section>\n            }\n            {error && <Message color =\"#e74c3c\" text={error} />}\n            {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (<Message text={`Nothing found for ${searchTerm}`} color=\"#95a5a6\"/>)}\n            </>\n            }\n</Container>\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n}\n\nexport default SearchPresenter;\n\n\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        error: null,\n        loading: false\n    }\n\n    // componentDidMount() {\n    //     this.handleSubmit();\n    // }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if (searchTerm !== \"\") {\n            this.searchByTerm(searchTerm);\n        }\n    }\n\n    updateTerm = (event) => {\n        const {target:{value}} = event;\n        // console.log(value)\n        this.setState({\n            searchTerm : value\n        })\n    }\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        this.setState({loading: true})\n        try {\n            \n            const { data: { results: movieResults } } = await moviesApi.search(searchTerm);\n            const { data: { results: tvResults } } = await tvApi.search(searchTerm);\n            // console.log(movieResults, tvResults)\n            \n            this.setState({\n                movieResults,\n                tvResults,\n                \n            })\n        } catch{\n            this.setState({\n                error: \"Can't find result\"\n            })\n        } finally {\n            this.setState({\n                loading: false,\n            })\n        }\n    }\n\n    render() {\n        const { movieResults,\n            tvResults,\n            searchTerm,\n            error, \n            loading,\n            \n        } = this.state;\n            \n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                error={error}\n                loading={loading}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        )\n    }\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from 'react-helmet';\nimport Loader from '../../Components/Loader';\n\nconst Container = styled.div`\n    height:calc(100vh - 50px);\n    width:100%;\n    position:absolute;\n    padding:50px;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background-image: url(${props => props.bgImage});\n    background-position:center center;\n    background-size:cover;\n    filter: blur(3px);\n    opacity:0.5;\n    z-index:0;\n`;\n\nconst Content = styled.div`\ndisplay:flex;\nwidth:100%;\nposition:relative;\nz-index:1;\nheight:100%;\n`;\n\nconst Cover = styled.div`\n    width:30%;\n    background-image: url(${props => props.bgImage});\n    background-position:center center;\n    background-size:cover;\n    height:100%;\n    border-radius:5px;\n`;\n\nconst Data = styled.div`\n    width:70%;\n    margin-left:10px;\n`;\n\nconst Title = styled.h3`\n    font-size:32px;\n    margin-bottom:10px;\n`;\n\nconst ItemContainer = styled.div`\n    margin:20px 0px;\n`;\n\nconst Item = styled.span`\n    margin: 0 10px;\n`;\n\nconst Divider = styled.span`\n    font-size:18px;\n`;\n\nconst Overview = styled.p`\n    font-size:12px;\n    opacity:0.7;\n    line-height:2;\n    width:50%;\n    color:rgba(255);\n`;\n\nconst DetailPresenter = (\n    { result,\n        error,\n        loading }\n) => (\n\n        loading ? \n        <>\n        <Helmet>\n            <title>\n                Loading | Noxfilx\n            </title>\n        </Helmet>\n        <Loader /> \n        </>\n        :\n            <Container>\n                 <Helmet>\n            <title>\n            {result.original_title ? result.original_title : result.original_name} | Noxfilx\n            </title>\n        </Helmet>\n                <Backdrop\n                    bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n                />\n                <Content>\n                    <Cover\n                        bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"../../asset/noPosterSmall.jpeg\")}\n                    />\n                    <Data>\n                        <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n                        <ItemContainer>\n                            <Item>{result.first_air_date ? result.first_air_date.substring(0, 4) : result.release_date.substring(0, 4)}</Item>\n                            <Divider>·</Divider>\n                            <Item>{result.runtime} min</Item>\n                            <Divider>·</Divider>\n                            <Item>{result.genres && result.genres.map((genre, index) => index === result.genres.length - 1 ? genre.name : `${genre.name} / `)}</Item>\n\n                        </ItemContainer>\n                        <Overview>\n                            {result.overview}\n                        </Overview>\n                    </Data>\n                </Content>\n            </Container>\n    )\n\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    error: PropTypes.bool.isRequired,\n    loading: PropTypes.string\n}\n\nexport default DetailPresenter;\n\n\n\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;","import React from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\nexport default class extends React.Component {\n    constructor(props){\n        super(props);\n        const {location: {pathname }} = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie : pathname.includes(\"/movie/\")\n\n    }\n    }\n\n    async componentDidMount() {\n        const { match: { params: { id } }, \n        history : {push},\n    } = this.props;\n        const {isMovie} = this.state\n        const parsedId = parseInt(id);\n        if(isNaN(parsedId)){\n            return push(\"/\");\n        } \n        let result = null;\n        try{\n            if(isMovie){\n                ( {data : result}  = await moviesApi.movieDetail(parsedId));\n                 \n            } else{\n                ( {data : result}  = await tvApi.showDetail(parsedId));\n                 \n            }\n            // console.log(result)\n        }catch{\n            this.setState({ error : \"Can't find anything\"})\n        }finally{\n            this.setState({ loading: false, result})\n        }\n    }\n\n    render() {\n        const { result, error, loading } = this.state;\n        console.log(result)\n        return (\n            <DetailPresenter\n                result={result}\n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"../Routes/Home\";\nimport TV from \"../Routes/TV\";\nimport Search from \"../Routes/Search\";\nimport Detail from \"../Routes/Detail\"\n\nexport default () => (\n    <Router>\n        <>\n        <Header />\n        <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\"  component={TV} />\n        <Route path=\"/search\"  component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n        </>\n    </Router> \n)","import {createGlobalStyle} from \"styled-components\";\nimport reset from 'styled-reset';\n\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:14px;\n        background-color:rgba(20,20,20,1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;","import React, {Component} from 'react';\nimport Router from \"./Router\";\nimport GloblaStyles from './GlobalStyled';\n\nclass App extends Component {\n  render() {\n    return (\n    <>\n    <Router />\n    <GloblaStyles />\n    </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport \"./api\"\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}